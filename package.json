{
  "name": "xregistry-package-registries",
  "version": "1.0.0",
  "description": "Unified xRegistry API wrapper for multiple package registries",
  "main": "server.js",
  "scripts": {
    "build": "npm install && cd npm && npm run build && cd ../pypi && npm run build && cd ../nuget && npm run build && cd ../maven && npm run build && cd ../oci && npm run build && cd ../bridge && npm run build && cd ..",
    "build:npm": "npm install && cd npm && npm run build && cd ..",
    "build:pypi": "npm install && cd pypi && npm run build && cd ..",
    "build:maven": "npm install && cd maven && npm run build && cd ..",
    "build:nuget": "npm install && cd nuget && npm run build && cd ..",
    "build:oci": "npm install && cd oci && npm run build && cd ..",
    "build:bridge": "npm install && cd bridge && npm run build && cd ..",
    "build:minimal": "npm install && cd test && npm install && cd ..",
    "start": "node server.js",
    "start:all": "node server.js --enable pypi,npm,maven,nuget,oci",
    "dev": "node server.js --enable=pypi",
    "test": "npm run test:standalone",
    "test:all": "npm run test:standalone && npm run test:docker",
    "test:standalone": "npm run test:servers && npm run test:integration && npm run test:npm && npm run test:npm:basic && npm run test:npm:angular",
    "test:servers": "npm run test:npm:server && npm run test:pypi:server && npm run test:maven:server && npm run test:nuget:server && npm run test:oci:server",
    "test:npm:server": "npm run build:npm && cd test && npm run test:npm",
    "test:pypi:server": "npm run build:pypi && cd test && npm run test:pypi",
    "test:maven:server": "npm run build:maven && cd test && npm run test:maven",
    "test:nuget:server": "npm run build:nuget && cd test && npm run test:nuget",
    "test:oci:server": "npm run build:oci && cd test && npm run test:oci",
    "test:docker": "npm run test:integration:docker && npm run test:integration:bridge",
    "test:install": "npm run build:minimal",
    "test:npm": "npm run build:npm && cd test && npm run test:npm",
    "test:npm:angular": "npm run build:npm && cd test && npm run test:npm:angular",
    "test:npm:basic": "npm run build:npm && cd test && npm run test:npm:basic",
    "test:unit": "npm run build:minimal && npx mocha 'test/unit/**/*.test.js' --recursive --timeout 5000 --exit",
    "test:integration": "npm run build:minimal && npx mocha 'test/integration/**/*.test.js' --recursive --timeout 15000 --exit",
    "test:regression": "npm run build:minimal && npx mocha 'test/regression/**/*.test.js' --recursive --timeout 10000 --exit",
    "test:integration:docker": "npm run build && powershell -ExecutionPolicy Bypass -File test/run-docker-integration-tests.ps1",
    "test:integration:docker:bash": "npm run build && ./test/run-docker-integration-tests.sh",
    "test:integration:bridge": "npm run build:bridge && powershell -ExecutionPolicy Bypass -File test/run-bridge-integration-tests.ps1",
    "test:integration:bridge:bash": "npm run build:bridge && ./test/run-bridge-integration-tests.sh",
    "test:full-log": "npm run test:full-log:windows",
    "test:full-log:windows": "npm run build && (npm run test:unit 2>&1 && npm run test:integration 2>&1 && npm run test:servers 2>&1 && npm run test:npm 2>&1 && npm run test:npm:basic 2>&1 && npm run test:npm:angular 2>&1 && npm run test:regression 2>&1) | tee test-results-full.log 2>&1 || echo \"Some tests failed but continuing...\" | tee -a test-results-full.log",
    "test:full-log:bash": "npm run build && { npm run test:unit 2>&1; npm run test:integration 2>&1; npm run test:servers 2>&1; npm run test:npm 2>&1; npm run test:npm:basic 2>&1; npm run test:npm:angular 2>&1; npm run test:regression 2>&1; } | tee test-results-full.log 2>&1; echo \"Test run completed - check test-results-full.log for details\"",
    "docker:build": "docker build -f bridge.Dockerfile -t xregistry-unified .",
    "docker:run": "docker run -p 3000:3000 --rm xregistry-unified",
    "docker:test": "bash test-docker.sh",
    "docker:compose": "docker-compose up unified",
    "docker:compose:dev": "docker-compose up pypi npm"
  },
  "keywords": [
    "xregistry",
    "pypi",
    "npm",
    "maven",
    "nuget",
    "oci",
    "package-registry",
    "api"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "axios": "^1.6.0",
    "express": "^4.18.2",
    "yargs": "^17.7.2"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "devDependencies": {
    "@sinonjs/referee-sinon": "^12.0.0",
    "chai": "^4.3.10",
    "jsverify": "^0.8.4",
    "knuth-shuffle": "^1.0.8",
    "mocha": "^10.2.0",
    "sinon": "^17.0.1",
    "supertest": "^6.3.3"
  }
}