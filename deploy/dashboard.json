{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "706386001084572526"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location where all resources will be deployed"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "The environment name (prod, staging, exp)"
      }
    },
    "appInsightsResourceId": {
      "type": "string",
      "metadata": {
        "description": "Application Insights resource ID"
      }
    },
    "dashboardSuffix": {
      "type": "string",
      "defaultValue": "ops",
      "metadata": {
        "description": "Dashboard name suffix"
      }
    }
  },
  "variables": {
    "baseName": "[format('xregistry-pkg-{0}', parameters('environment'))]",
    "dashboardName": "[if(empty(parameters('dashboardSuffix')), format('{0}-dashboard', variables('baseName')), format('{0}-{1}-dashboard', variables('baseName'), parameters('dashboardSuffix')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Portal/dashboards",
      "apiVersion": "2020-09-01-preview",
      "name": "[variables('dashboardName')]",
      "location": "[parameters('location')]",
      "tags": {
        "hidden-title": "xRegistry Package Registries - Operations Dashboard"
      },
      "properties": {
        "lenses": [
          {
            "order": 0,
            "parts": [
              {
                "position": {
                  "x": 0,
                  "y": 0,
                  "colSpan": 12,
                  "rowSpan": 2
                },
                "metadata": {
                  "inputs": [],
                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                  "settings": {
                    "content": {
                      "settings": {
                        "content": "[format('# ðŸš€ xRegistry Package Registries - Operations Dashboard\n\n**Live monitoring for NPM, PyPI, Maven, NuGet, OCI, and Bridge services**\n\nThis dashboard provides monitoring of all package registry services including health status, traffic patterns, performance metrics, and error rates.\n\n## Services Monitored\n- **NPM Registry** - Node.js package management\n- **PyPI Registry** - Python package management\n- **Maven Registry** - Java package management\n- **NuGet Registry** - .NET package management\n- **OCI Registry** - Container image management\n- **Bridge Service** - Cross-registry synchronization\n\n## Quick Links\n- [View Application Insights](https://portal.azure.com)\n- [Service Health](https://portal.azure.com)\n- [Error Logs](https://portal.azure.com)\n\n---\n\n*Dashboard for {0} environment*', parameters('environment'))]"
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 2,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "requests | where cloud_RoleName in (\"npm\", \"pypi\", \"maven\", \"nuget\", \"oci\", \"bridge\") | summarize Count=count() by bin(timestamp, 5m), cloud_RoleName"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsLineChartPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Service Requests Over Time"
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 6,
                  "y": 2,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "requests | where cloud_RoleName in (\"npm\", \"pypi\", \"maven\", \"nuget\", \"oci\", \"bridge\") | summarize Hits=countif(resultCode == \"200\"), Misses=countif(resultCode == \"404\") by cloud_RoleName"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsGridPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Hits (200) vs Misses (404)"
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 6,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "requests | where cloud_RoleName in (\"npm\", \"pypi\", \"maven\", \"nuget\", \"oci\", \"bridge\") | summarize P50=percentile(duration, 50), P95=percentile(duration, 95), P99=percentile(duration, 99) by cloud_RoleName"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsGridPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Response Times (ms)"
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 6,
                  "y": 6,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "requests | where cloud_RoleName in (\"npm\", \"pypi\", \"maven\", \"nuget\", \"oci\", \"bridge\") | summarize SuccessRate=100.0*sum(toint(success))/count() by cloud_RoleName"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsGridPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Service Success Rate (%)"
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 10,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "requests | where cloud_RoleName in (\"npm\", \"pypi\", \"maven\", \"nuget\", \"oci\", \"bridge\") | extend GroupName = tostring(customDimensions[\"GroupName\"]) | where isnotempty(GroupName) | summarize RequestCount=count() by GroupName | order by RequestCount desc | take 10"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsGridPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Most Requested Groups"
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 6,
                  "y": 10,
                  "colSpan": 6,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "requests | where cloud_RoleName in (\"npm\", \"pypi\", \"maven\", \"nuget\", \"oci\", \"bridge\") | extend ResourceName = tostring(customDimensions[\"ResourceName\"]) | where isnotempty(ResourceName) | summarize RequestCount=count() by ResourceName | order by RequestCount desc | take 10"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsGridPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Most Requested Resources"
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 14,
                  "colSpan": 12,
                  "rowSpan": 3
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "customEvents | where name == \"ContainerRestart\" | summarize Restarts=count() by bin(timestamp, 1h), cloud_RoleName"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsLineChartPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Container Restarts",
                      "yAxis": {
                        "isVisible": true,
                        "title": "Restart Count"
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 17,
                  "colSpan": 12,
                  "rowSpan": 3
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "ComponentId",
                      "value": "[parameters('appInsightsResourceId')]"
                    },
                    {
                      "name": "Query",
                      "value": "requests | where name contains \"health\" or url contains \"/health\" | summarize HealthyCount=countif(success == true), UnhealthyCount=countif(success == false) by bin(timestamp, 5m), cloud_RoleName"
                    }
                  ],
                  "type": "Extension/AppInsightsExtension/PartType/AnalyticsLineChartPart",
                  "settings": {
                    "chartSettings": {
                      "title": "Health Status"
                    }
                  }
                }
              }
            ]
          }
        ],
        "metadata": {
          "model": {
            "timeRange": {
              "value": {
                "relative": {
                  "duration": 24,
                  "timeUnit": 1
                }
              },
              "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "dashboardId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Portal/dashboards', variables('dashboardName'))]"
    },
    "dashboardName": {
      "type": "string",
      "value": "[variables('dashboardName')]"
    },
    "dashboardUrl": {
      "type": "string",
      "value": "[format('https://portal.azure.com/#@/dashboard/arm{0}', resourceId('Microsoft.Portal/dashboards', variables('dashboardName')))]"
    }
  }
}