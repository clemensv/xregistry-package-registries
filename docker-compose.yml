version: "3.8"

services:
  # Bridge Service - Main API Gateway
  bridge:
    build:
      context: .
      dockerfile: bridge.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - BRIDGE_PORT=8080
    volumes:
      - ./logs/bridge:/app/logs
      - ./cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Maven Service
  maven:
    build:
      context: .
      dockerfile: maven.Dockerfile
    ports:
      - "3200:3200"
    environment:
      - NODE_ENV=production
      - MAVEN_PORT=3200
    volumes:
      - ./logs/maven:/app/logs
      - ./maven/cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3200/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # NPM Service
  npm:
    build:
      context: .
      dockerfile: npm.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NPM_PORT=3000
    volumes:
      - ./logs/npm:/app/logs
      - ./npm/cache:/app/cache
      - ./npm/all-packages:/app/all-packages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PyPI Service
  pypi:
    build:
      context: .
      dockerfile: pypi.Dockerfile
    ports:
      - "3100:3100"
    environment:
      - NODE_ENV=production
      - PYPI_PORT=3100
    volumes:
      - ./logs/pypi:/app/logs
      - ./pypi/cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # NuGet Service
  nuget:
    build:
      context: .
      dockerfile: nuget.Dockerfile
    ports:
      - "3300:3300"
    environment:
      - NODE_ENV=production
      - NUGET_PORT=3300
    volumes:
      - ./logs/nuget:/app/logs
      - ./nuget/cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3300/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # OCI Service
  oci:
    build:
      context: .
      dockerfile: oci.Dockerfile
    ports:
      - "3400:3400"
    environment:
      - NODE_ENV=production
      - OCI_PORT=3400
    volumes:
      - ./logs/oci:/app/logs
      - ./oci/cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3400/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  logs:
  cache:
